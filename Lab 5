/*
CPSC 121 - Lab 5
Take 3
Created by:  Brian Bui
Started on:  2 March 2016
Last edited:  9 March 2016
*/

#include<iostream>
#include<string>
#include<cstring>

using namespace std;

const int SIZE = 10;
const int min = 1, max = 6;

void getChoice(int&x);
void newStudent(struct Student student[], int x, bool, int assignment);
void gradeStudent(struct Student student[], int max, int& assignment, bool);
void findStudent(struct Student student[], int max, int assignment);

struct Student
{
	string firstName,
		lastName;
	double score[SIZE];
};

int main()
{
	struct Student cabinet[SIZE];
	string lines = "====================";

	int choice;
	int stuCount = 0;
	int assignment = 0;

	bool studentSpace = true;
	bool assignmentSpace = true;

	do // loop
	{
		cout << "Welcome to Aeries Portal." << endl;
		cout << lines << lines << endl;
		cout << "1..........Add a student." <<
			endl << "2..........Assign a grade." <<
			endl << "3..........Find a student." <<
			endl << "4..........Find an assignment." <<
			endl << "5..........Display all grades." <<
			endl << "6..........Exit." << endl;
		cin >> choice;
		getChoice(choice);

		if (choice == 1)
		{
			newStudent(cabinet, stuCount, studentSpace, assignment);
			stuCount++;
			if (stuCount >= SIZE)
			{
				studentSpace = false;
				stuCount = stuCount -1;
			}
		}

		if (choice == 2)
		{
			if (stuCount == 0)
			{
				cout << "There are no students in the registry!" << endl;
			}
			else
				if (assignment >= SIZE)
				{
					assignmentSpace = false;
					assignment = assignment - 1;
				}
				else
					{
						gradeStudent(cabinet, stuCount, assignment, assignmentSpace);
						assignment++;
					}
		}

		if (choice == 3)
		{
			findStudent(cabinet, stuCount, assignment);
		}

		if (choice == 4)
		{

		}

		if (choice == 5)
		{

		}

	} while (choice != 6);

	cout << "Goodbye!" << endl;

	system("pause");
	return 0;
}

void getChoice(int&x)
{
	while (x < min || x > max)
	{
		while (cin.fail())
		{
			cin.clear();
			cin.ignore();
		}
		cout << "Invalid input." << endl;
		cin >> x;
	}
}

void newStudent(struct Student student[], int i, bool space, int assignment)
{
	if (space == true)
	{
		cin.clear();
		cout << "Please enter the student's first name:  " << endl;
		cin >> student[i].firstName;
		cout << "Please enter the student's last name:  " << endl;
		cin >> student[i].lastName;

	}
	else
		cout << "No more space in the student registry!" << endl;
	cout << string(50, '\n');
	cin.clear();
	cin.ignore(1000, '\n');
}

void gradeStudent(struct Student student[], int max, int& assignment, bool space)
{
	if (space == true)
	{
		for (int i = 0; i < max; i++)
		{
			cout << "Student Name:  " << student[i].lastName << ", " << student[i].firstName << endl;
			cout << "Assignment:  ";
			cin >> student[i].score[assignment];
		}
	}
	else
		cout << "No more space in the assignment registry!" << endl;
	cout << string(50, '\n');
	cin.clear();
	cin.ignore(1000, '\n');

}

void findStudent(struct Student student[], int max, int assignment)
{
	int choice;
	double finalValue = 0;

	cout << "Please select which student you would like to access.  (Please press the number corresponding the the respective student)" << endl;
	for (int i = 0; i < max; i++)
	{
		cout << i+1 << ". " << student[i].lastName << ", " << student[i].firstName << endl;
	}
	cin.clear();
	cin.ignore(1000, '\n');
	cin >> choice;
	choice = choice - 1;

	{
		cout << "Student Name:  " << student[choice].lastName << ", " << student[choice].firstName << endl;
		
		for (int i = 0; i < assignment; i++)
		{
			cout << "Assignment " << i+1 << ":  "  << student[choice].score[i] << endl;
			finalValue += student[choice].score[i];
		}
		finalValue = finalValue / assignment;
		cout << "Average:  " << finalValue << endl;

	}

}
